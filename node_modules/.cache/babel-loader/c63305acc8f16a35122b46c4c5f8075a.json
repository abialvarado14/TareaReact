{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\suyap\\\\nueva-app-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\suyap\\\\nueva-app-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\suyap\\\\nueva-app-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\suyap\\\\nueva-app-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\suyap\\\\nueva-app-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\suyap\\\\nueva-app-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\suyap\\\\nueva-app-react\\\\src\\\\components\\\\Game.js\";\nimport React, { Component } from 'react';\nimport Board from './Board';\n\nvar Game =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Game, _React$Component);\n\n  function Game(props) {\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this, props));\n    _this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true\n    };\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"handleClick\",\n    value: function handleClick(i) {\n      var history = this.state.history;\n      var current = history[history.length - 1];\n      var squares = current.squares.slice();\n\n      if (calculateWinner(squares) || squares[i]) {\n        return;\n      }\n\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\n      this.setState({\n        history: history.concat([{\n          squares: squares\n        }]),\n        xIsNext: !this.state.xIsNext\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var history = this.state.history;\n      var current = history[history.length - 1];\n      var winner = calculateWinner(current.squares);\n      var status;\n\n      if (winner) {\n        status = 'Winner: ' + winner;\n      } else {\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n      }\n\n      return React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"game-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Board, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"game-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Game;\n}(React.Component);\n\nfunction calculateWinner(squares) {\n  var lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (var i = 0; i < lines.length; i++) {\n    var _lines$i = _slicedToArray(lines[i], 3),\n        a = _lines$i[0],\n        b = _lines$i[1],\n        c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nhistory = [// Before first move\n{\n  squares: [null, null, null, null, null, null, null, null, null]\n}, // After first move\n{\n  squares: [null, null, null, null, 'X', null, null, null, null]\n}, // After second move\n{\n  squares: [null, null, null, null, 'X', null, null, null, 'O']\n}];\nexport default Game;","map":{"version":3,"sources":["C:\\Users\\suyap\\nueva-app-react\\src\\components\\Game.js"],"names":["React","Component","Board","Game","props","state","history","squares","Array","fill","xIsNext","i","current","length","slice","calculateWinner","setState","concat","winner","status","lines","a","b","c"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Board from './Board';\r\n\r\nclass Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null),\r\n            }],\r\n            xIsNext: true,\r\n        };\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history;\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n          return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n          history: history.concat([{\r\n            squares: squares,\r\n          }]),\r\n          xIsNext: !this.state.xIsNext,\r\n        });\r\n      }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[history.length - 1];\r\n        const winner = calculateWinner(current.squares);\r\n\r\n        let status;\r\n        if (winner) {\r\n            status = 'Winner: ' + winner;\r\n        } else {\r\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{/* status */}</div>\r\n                    <ol>{/* TODO */}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\nhistory = [\r\n    // Before first move\r\n    {\r\n        squares: [\r\n            null, null, null,\r\n            null, null, null,\r\n            null, null, null,\r\n        ]\r\n    },\r\n    // After first move\r\n    {\r\n        squares: [\r\n            null, null, null,\r\n            null, 'X', null,\r\n            null, null, null,\r\n        ]\r\n    },\r\n    // After second move\r\n    {\r\n        squares: [\r\n            null, null, null,\r\n            null, 'X', null,\r\n            null, null, 'O',\r\n        ]\r\n    },\r\n]\r\n\r\n\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}